// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "nativium/data/RepositoryColumn.hpp"

namespace djinni_generated {

class NTVRepositoryColumn final {
public:
    using CppType = ::nativium::data::RepositoryColumn;
    using JniType = jobject;

    using Boxed = NTVRepositoryColumn;

    ~NTVRepositoryColumn();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NTVRepositoryColumn();
    friend ::djinni::JniClass<NTVRepositoryColumn>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/nativium/data/RepositoryColumn") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(JLjava/lang/String;Ljava/lang/String;ZLjava/lang/String;ZLjava/lang/String;)V") };
    const jfieldID field_mId { ::djinni::jniGetFieldID(clazz.get(), "mId", "J") };
    const jfieldID field_mName { ::djinni::jniGetFieldID(clazz.get(), "mName", "Ljava/lang/String;") };
    const jfieldID field_mType { ::djinni::jniGetFieldID(clazz.get(), "mType", "Ljava/lang/String;") };
    const jfieldID field_mNotNull { ::djinni::jniGetFieldID(clazz.get(), "mNotNull", "Z") };
    const jfieldID field_mDefaultValue { ::djinni::jniGetFieldID(clazz.get(), "mDefaultValue", "Ljava/lang/String;") };
    const jfieldID field_mPk { ::djinni::jniGetFieldID(clazz.get(), "mPk", "Z") };
    const jfieldID field_mGroupType { ::djinni::jniGetFieldID(clazz.get(), "mGroupType", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
