// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "nativium/data/RepositoryInfo.hpp"

namespace djinni_generated {

class NTVRepositoryInfo final {
public:
    using CppType = ::nativium::data::RepositoryInfo;
    using JniType = jobject;

    using Boxed = NTVRepositoryInfo;

    ~NTVRepositoryInfo();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NTVRepositoryInfo();
    friend ::djinni::JniClass<NTVRepositoryInfo>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/nativium/data/RepositoryInfo") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Lcom/nativium/data/DatabaseFileData;Ljava/util/ArrayList;Ljava/util/ArrayList;)V") };
    const jfieldID field_mSqliteVersion { ::djinni::jniGetFieldID(clazz.get(), "mSqliteVersion", "Ljava/lang/String;") };
    const jfieldID field_mFileData { ::djinni::jniGetFieldID(clazz.get(), "mFileData", "Lcom/nativium/data/DatabaseFileData;") };
    const jfieldID field_mTables { ::djinni::jniGetFieldID(clazz.get(), "mTables", "Ljava/util/ArrayList;") };
    const jfieldID field_mViews { ::djinni::jniGetFieldID(clazz.get(), "mViews", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
