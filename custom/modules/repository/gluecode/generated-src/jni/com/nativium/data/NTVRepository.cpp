// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "com/nativium/data/NTVRepository.hpp"  // my header
#include "com/nativium/data/NTVRepositoryColumn.hpp"
#include "com/nativium/data/NTVRepositoryInfo.hpp"
#include "com/nativium/data/NTVRepositoryRows.hpp"
#include "com/nativium/data/NTVRepositoryTable.hpp"
#include "com/nativium/data/NTVRepositoryView.hpp"
#include "djinni/jni/Marshal.hpp"

namespace djinni_generated {

NTVRepository::NTVRepository() : ::djinni::JniInterface<::nativium::data::Repository, NTVRepository>("com/nativium/data/Repository$CppProxy") {}

NTVRepository::~NTVRepository() = default;


CJNIEXPORT void JNICALL Java_com_nativium_data_Repository_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::nativium::data::Repository>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nativium_data_Repository_shared(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        auto r = ::nativium::data::Repository::shared();
        return ::djinni::release(::djinni_generated::NTVRepository::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1open(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_path)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        ref->open(::djinni::String::toCpp(jniEnv, j_path));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1close(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        ref->close();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1test(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        ref->test();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1getInfo(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        auto r = ref->getInfo();
        return ::djinni::release(::djinni_generated::NTVRepositoryInfo::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1getSqliteVersion(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        auto r = ref->getSqliteVersion();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1getTableList(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        auto r = ref->getTableList();
        return ::djinni::release(::djinni::List<::djinni_generated::NTVRepositoryTable>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1getViewList(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        auto r = ref->getViewList();
        return ::djinni::release(::djinni::List<::djinni_generated::NTVRepositoryView>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1getColumns(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_name)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        auto r = ref->getColumns(::djinni::String::toCpp(jniEnv, j_name));
        return ::djinni::release(::djinni::List<::djinni_generated::NTVRepositoryColumn>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nativium_data_Repository_00024CppProxy_native_1getRows(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_name, jstring j_sortBy, jboolean j_descending, jint j_page, jint j_rowsPerPage)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::nativium::data::Repository>(nativeRef);
        auto r = ref->getRows(::djinni::String::toCpp(jniEnv, j_name),
                              ::djinni::String::toCpp(jniEnv, j_sortBy),
                              ::djinni::Bool::toCpp(jniEnv, j_descending),
                              ::djinni::I32::toCpp(jniEnv, j_page),
                              ::djinni::I32::toCpp(jniEnv, j_rowsPerPage));
        return ::djinni::release(::djinni_generated::NTVRepositoryRows::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
